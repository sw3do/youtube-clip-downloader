name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build Electron app
        run: npm run build

      - name: Package Electron app
        run: npm run dist
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.os }}
          path: release/

      - name: Create Release
        if: matrix.os == 'ubuntu-latest'
        run: |
          if ! gh release view v1.0.0 >/dev/null 2>&1; then
            gh release create v1.0.0 --title "Release v1.0.0" --notes "Automated release"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Wait for Release Creation
        if: matrix.os != 'ubuntu-latest'
        run: |
          for i in {1..30}; do
            if gh release view v1.0.0 >/dev/null 2>&1; then
              echo "Release found!"
              break
            fi
            echo "Waiting for release... ($i/30)"
            sleep 10
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        run: |
          for file in release/*; do
            if [ -f "$file" ]; then
              gh release upload v1.0.0 "$file" --clobber
            fi
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}